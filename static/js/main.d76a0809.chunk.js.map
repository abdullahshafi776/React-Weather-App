{"version":3,"sources":["components/Header.jsx","images/weather.jpg","redux/Constants/weatherConstants.js","pages/Weather/Weather.jsx","redux/Actions/action.jsx","redux/reducers/weatherReducer.js","redux/reducers/index.jsx","store.jsx","App.jsx","index.js"],"names":["Header","id","className","WEATHER_DATA_REQUEST","WEATHER_DATA_SUCCESS","WEATHER_DATA_FAIL","Weather","dispatch","useDispatch","useState","search","setSearch","weather","useSelector","state","weatherData","useEffect","a","type","axios","get","data","payload","response","message","fetchdata","style","backgroundImage","background","onChange","e","target","value","main","temp","temp_min","temp_max","action","loading","success","error","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"4LAEe,SAASA,IACtB,OACE,yBAASC,GAAG,OAAOC,UAAU,uBAA7B,SACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIA,UAAU,wBAAd,mC,YCNO,MAA0B,oC,iDCA5BC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBCElB,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACQC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAzCH,QAMR,OAJAI,qBAAU,WACRT,ECHqB,SAACG,GAAD,8CAAY,WAAOH,GAAP,iBAAAU,EAAA,sEAEjCV,EAAS,CAAEW,KAAMf,IAFgB,SAGVgB,IAAMC,IAAN,4DACgCV,EADhC,yDAHU,gBAGzBW,EAHyB,EAGzBA,KAIRd,EAAS,CACPW,KAAMd,EACNkB,QAASD,IATsB,gDAYjCd,EAAS,CACPW,KAAMb,EACNiB,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAjBmB,yDAAZ,sDDGZC,CAAUf,MAClB,CAACA,IAGF,qBAAKR,UAAU,uBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBACEA,UAAU,UACVwB,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,MAF1B,UAIE,qBAAK1B,UAAU,OAAf,SACE,uBACEgB,KAAK,OACLhB,UAAU,yBACV2B,SAAU,SAACC,GAAD,OAAOnB,EAAUmB,EAAEC,OAAOC,YAGxC,qBAAK9B,UAAU,OAAf,SACE,qBAAKA,UAAU,cAAf,SACGU,EACC,gCACE,qBAAIV,UAAU,OAAd,UACE,mBAAGA,UAAU,iCADf,IACoDQ,KAEpD,sBAAKR,UAAU,OAAf,UACE,qBAAIA,UAAU,OAAd,UAAsBU,EAAQqB,KAAKC,KAAnC,YACA,oBAAGhC,UAAU,aAAb,kBACQU,EAAQqB,KAAKE,SADrB,gBACuC,IACpCvB,EAAQqB,KAAKG,SAFhB,kBAOJ,gCACE,mBAAGlC,UAAU,4CACb,mBAAGA,UAAU,YAAb,2C,iBEtBLa,EAfK,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIuB,EAAW,uCAC1C,OAAQA,EAAOnB,MACb,KAAKf,EACH,MAAO,CAAEmC,SAAS,GAEpB,KAAKlC,EACH,MAAO,CAAEkC,SAAS,EAAOC,SAAS,EAAM3B,QAASyB,EAAOf,SAE1D,KAAKjB,EACH,MAAO,CAAEiC,SAAS,EAAOE,MAAOH,EAAOf,SAEzC,QACE,OAAOR,ICdE2B,EAJKC,YAAgB,CAClC3B,gB,QCAI4B,EAAmBC,OAAOC,sCAAwCC,IAOzDC,EALDC,YACZP,EACAE,EAAiBM,YAAgBC,O,QCWpBC,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAUJ,MAAOA,EAAjB,UACE,cAAC/C,EAAD,IACA,cAACM,EAAD,UCPR8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d76a0809.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <section id=\"head\" className=\"shadow border-bottom\">\r\n      <div className=\"container text-center\">\r\n        <h4 className=\"py-3 font-weight-bold\">React Weather App</h4>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/weather.a36dee77.jpg\";","export const WEATHER_DATA_REQUEST = \"WEATHER_DATA_REQUEST\";\r\nexport const WEATHER_DATA_SUCCESS = \"WEATHER_DATA_SUCCESS\";\r\nexport const WEATHER_DATA_FAIL = \"WEATHER_DATA_FAIL\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport background from \"../../images/weather.jpg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchdata } from \"../../redux/Actions/action\";\r\nexport default function Weather() {\r\n  const dispatch = useDispatch();\r\n  const [search, setSearch] = useState(\"\");\r\n  const { weather } = useSelector((state) => state.weatherData);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchdata(search));\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"container-fluid pt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"offset-lg-4 col-lg-4\">\r\n          <div\r\n            className=\"weather\"\r\n            style={{ backgroundImage: `url(${background})` }}\r\n          >\r\n            <div className=\"pt-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"inp_feild form-control\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"pt-5\">\r\n              <div className=\"text-center\">\r\n                {weather ? (\r\n                  <div>\r\n                    <h1 className=\"pb-5\">\r\n                      <i className=\"text-white fas fa-globe-asia\"></i> {search}\r\n                    </h1>\r\n                    <div className=\"pt-5\">\r\n                      <h2 className=\"pt-4\">{weather.main.temp}℃</h2>\r\n                      <p className=\"text-light\">\r\n                        Min: {weather.main.temp_min}℃ | Max:{\" \"}\r\n                        {weather.main.temp_max}℃\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <i className=\"text-white fas fa-globe-asia fa-3x pt-2\"></i>\r\n                    <p className=\"display-4\">No Data Found</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  WEATHER_DATA_FAIL,\r\n  WEATHER_DATA_REQUEST,\r\n  WEATHER_DATA_SUCCESS,\r\n} from \"../Constants/weatherConstants\";\r\n\r\nexport const fetchdata = (search) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: WEATHER_DATA_REQUEST });\r\n    const { data } = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=e943d584c97cd5b76d739b4e724af3d0`\r\n    );\r\n\r\n    dispatch({\r\n      type: WEATHER_DATA_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: WEATHER_DATA_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import {\r\n  WEATHER_DATA_FAIL,\r\n  WEATHER_DATA_REQUEST,\r\n  WEATHER_DATA_SUCCESS,\r\n} from \"../Constants/weatherConstants\";\r\n\r\nconst initialdata = {\r\n  weather: [],\r\n};\r\nconst weatherData = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case WEATHER_DATA_REQUEST:\r\n      return { loading: true };\r\n\r\n    case WEATHER_DATA_SUCCESS:\r\n      return { loading: false, success: true, weather: action.payload };\r\n\r\n    case WEATHER_DATA_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default weatherData;\r\n","import weatherData from \"./weatherReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weatherData,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./redux/reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Weather from \"./pages/Weather/Weather\";\r\nimport \"./App.css\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Weather />\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App'\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}